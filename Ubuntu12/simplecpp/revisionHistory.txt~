15/8/2012 Added code to abort with helpful message if graphics
commands are used without calls to initCanvas or turtleSim.

16/8/2012 sprites created inline get destroyed at the end of the
block.  If this block = main program, then destructors would be called
after closeCanvas.  This used to produce a segmentation fault.
Modified closeCanvas so that it sets display = NULL, indicating that
the canvas has been closed.  Modified removeSprite to first check if
display is not NULL, and only if so repaint it.  Now only poly has a
non trivial destructor: because it needs to remove the vertex array.
Sprite has a destructor which only calls canvas::removeSprite, which
in turn calls repaint only if canvas::display is not NULL.  For parts
of composite objects, the destructor called on sprite will call
removeSprite although it is not needed, but it does not do damage as
it is written.  Also modified class Text so that it paints only when
visible.  This was an obvious bug.

21/8/2012 Fixed wait bug.  (int) p/q means ((int) p)/q, apparently.

14/9/2012 Added Text(cx, cy, number) constructor.

14/10/2012 Added event handling.  made functions of keypress,
motionnotify. function charfromevent.  checkevent was already there.

22/10/2012 Added alternate font loading to canvas.cpp.  Thanks to
Kashyap and Shashank.

29/10/2012 Added mouse release event processing to canvas.cpp.  Also
made radius in circle protected, it was private earlier.

3/11/2012 Added miscellaneous accessors to graphics, e.g. getRadius,
and made some privates into protected.

8/11/2012 Fixed buttonrelease bug.

??/11/2012 or early december.  Put back the z_index.  Now the painting
order is the same as creation order by default.

20/12/2012 Changed polygon vertices to vector<Position>, from
Polygon*.  This way the copy constructor and assignment need not be
specially written.  Also the destructor is simplified.  Should add an
extra constructor that will take a vector of vertices instead of only
2d array.

20/12/2012 Implemented copy constructor in sprite.  With this no copy
constructor is needed in derived classes.  Needed to change set
holding active sprites for paintint to multiset, and erasing sprites
for removal had to be done by first finding them.  The newly
constructed sprite is not shown, but that does not matter because it
is on top of the old sprite anyway.
Next: assignment operator.

21/12/2012 Implemented assignment operator.  For d = s, hide d first
and then set d.visible = s.visible.  d remains hidden, but that is OK,
it is same as s, which is visible, so visually d is on top of s.
These operations can be done in Sprite class, with no special
implementation needed in other classes.  Whenever d changes (or really
any graphic operation happens) after this, d will be shown because it
is visible.

23/1/2013 Fixed a bug related to reset of polygons.  Now: init -- what
happens at the beginning: this must addSprite etc.  Reset: can happen
many times: this should only change parameters and repaint.  Now
sprite::reset changes center coordinates, and repaints -- it should be
called after all changes to shape variables have been done.
