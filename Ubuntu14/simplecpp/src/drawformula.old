#include <simplecpp>
#include <rectangle.h>

const float Swidth = 50;
const float Cwidth = 200;
const float Cheight= 150;
const float Cdescent=70;
const float Bheight = 20;  //space for horizontal bar in \upon

struct Rect{
  float w,h;
  Rect(float w1,float h1){w=w1;h=h1;}
};

struct Exp{
  Exp* lhs;
  Exp* rhs;
  char op;
  int value;
  float width, height, descent;
  Exp(int v){lhs=rhs=NULL;op=' ';value=v;}
  Exp(Exp* lhs1, char op1, Exp* rhs1){
    lhs = lhs1; rhs = rhs1; op = op1; value=0;}
  void setSize(){
    cout << op << endl;
    switch (op){
    case '+':
    case '-':
    case '*': 
      lhs->setSize(); 
      rhs->setSize();
      descent = max(lhs->descent, rhs->descent);
      width = lhs->width + Swidth + rhs->width;
      height = descent + max(lhs->height - lhs->descent, 
			     rhs->height - rhs->descent);
      break;
    case ' ': width = Cwidth; height = Cheight; descent = Cdescent;
      break;
    case '/':
      lhs->setSize(); 
      rhs->setSize();
      width = max(lhs->width, rhs->width);
      height = lhs->height + Bheight + rhs->height;
      descent = rhs->height + Bheight/2;
      break;
    default: cout << "Invalid input.\n";
    }
    cout << "width "<<width<<" height "<<height<<" descent "<< descent<<endl;
  }
  void draw(float clx, float cly){
    cout << ":"<<op<<":" << endl;
    switch(op){
    case '+':
    case '-':
    case '*': 
      Point(5,Position(blx+width/2,bly-descent)).imprint();
      Rectangle(blx+width/2, bly-height/2, width, height, false).imprint();
      lhs->draw(blx,bly);
      rhs->draw(blx+rhs->width+Swidth, bly);
      break;
    case ' ': 
      Rectangle(blx+width/2,bly-height/2,width,height).imprint();
      break;
    case '/':
      Line(Position(blx,bly-descent), Position(blx+width,bly-descent)).imprint();
      Rectangle(blx+width/2, bly-height/2, width, height, false).imprint();
      lhs->draw(blx,bly-rhs->height-Bheight);
      rhs->draw(blx,bly);
      break;
    default: cout << "Invalid input.\n";
    }
  }
};

int main(){
  Exp e(new Exp(1), '+', new Exp(new Exp(2), '/', new Exp(3)));
  e.setSize();

  initCanvas("Formula drawing");
  e.draw(200,200+e.height);
  wait(5);
}


